// Code generated by go-assign; DO NOT EDIT.

package example

import (
	"encoding/base64"
	"encoding/json"
	"os"
)

type ConfigGenerated struct {
	Config
	HelloAPITokenFile string `json:"helloAPITokenFile"`
	WorldAPITokenFile string `json:"worldAPITokenFile"`
}

func (g *ConfigGenerated) UnmarshalJSON(data []byte) error {
	type Alias ConfigGenerated
	s := struct {
		*Alias
		HelloAPITokenFile string `json:"helloAPITokenFile"`
		WorldAPITokenFile string `json:"worldAPITokenFile"`
	}{
		Alias: (*Alias)(g),
	}

	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	// Assign "HelloAPITokenFile" and "HelloAPIToken"
	g.HelloAPITokenFile = s.HelloAPITokenFile
	helloAPITokenFileData, err := os.ReadFile(s.HelloAPITokenFile)
	if err != nil {
		return err
	}
	g.HelloAPIToken = helloAPITokenFileData

	// Assign "WorldAPITokenFile" and "WorldAPIToken"
	g.WorldAPITokenFile = s.WorldAPITokenFile
	worldAPITokenFileData, err := os.ReadFile(s.WorldAPITokenFile)
	if err != nil {
		return err
	}
	g.WorldAPIToken = make([]byte, base64.StdEncoding.EncodedLen(len(worldAPITokenFileData)))
	if _, err := base64.StdEncoding.Decode(g.WorldAPIToken, worldAPITokenFileData); err != nil {
		return err
	}

	return nil
}
